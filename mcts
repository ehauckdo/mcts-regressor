#! /usr/bin/env python

import sys
import logging
import optparse
import random
from MCTS import MCTS 
from ExpressionModule.ExpressionComponents import components as c
from ExpressionModule.ExpressionHandler import ExpressionHandler
from Utility.Utility import prepareLogDirectory

def parseArgs(args):
    usage = "usage: %prog [options]"
    parser = optparse.OptionParser(usage=usage)    

    parser.add_option('-l', action="store", type="string", dest="folder",
        help="Select the folder to save results", default="default")
    parser.add_option('-v', action="store", type="int", dest="numvars",
        help="The number of variables to use for regression", default=1)
    parser.add_option('-i', action="store", type="int", dest="iterations",
        help="The number of MCTS iterations", default=5000)
    parser.add_option('-o', action="store", type="string", dest="objective",
        help="Objective function in polish notation", default="add add mul x x x 2")
    parser.add_option('-d', action="store", type="int", dest="depth",
        help="The maximum tree depth", default=7)
    parser.add_option('-s', action="store", type="int", dest="seed",
        help="Seed for this execution", default=0)
    parser.add_option('--lower', action="store", type="float", dest="lower",
        help="Lower value for samples", default=-10)
    parser.add_option('--upper', action="store", type="float", dest="upper",
        help="Upper value for samples", default=10)
    parser.add_option('--samples', action="store", type="int", dest="samples",
        help="Upper value for samples", default=40)
   
    (opt, args) = parser.parse_args()
    
    return opt

def resetLoggingModule(folder):
    for handler in logging.root.handlers[:]:
        logging.root.removeHandler(handler)
    
    prepareLogDirectory(folder)
    prepareLogDirectory(folder+"iterations/")
    
    logging.basicConfig(filename=folder+"log",level=logging.INFO, filemode='w')

def main(args):
    opt = parseArgs(args)
    #random.seed(opt.seed)
    #my_objective = [ c["add"], c["ln"], c["add"], c["x"], c["1"], c["ln"], c["add"], c["pow"], c["x"], c["2"], c["1"] ]  
    #my_objective = [c["mul"], c["mul"], c["x"], c["x"], c["x"]]
    #my_objective = [c["add"], c["add"], c["mul"], c["x"], c["x"], c["x"], c["2"]]
    index = 0
    for i in range(50):
        loggingFolder = "logs/"+opt.folder+"/"+str(index)+"/"
        resetLoggingModule(loggingFolder)
        handlerObject = ExpressionHandler(opt.objective, opt.numvars, loggingFolder, opt.lower, opt.upper, opt.samples)
        handlerObject.maxSolutionSize = opt.depth
        #logging.info("Objective: "+"\n".join(handlerObject.printComponents(opt.objective)))

        mcts = MCTS(handlerObject, 50000)
        mcts.run()
        index += 1

if __name__ == '__main__':
    main(sys.argv[1:])

